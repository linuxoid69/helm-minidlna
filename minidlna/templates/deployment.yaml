apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "minidlna.fullname" . }}
  labels:
    {{- include "minidlna.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "minidlna.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "minidlna.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "minidlna.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      hostNetwork: true
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- if .Values.image.args }}
          args:
          {{- range .Values.image.args }}
            - {{ . | quote }}
          {{- end }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MINIDLNA_MEDIA_DIR_1
              value: "A,/media/audio"
            - name: MINIDLNA_MEDIA_DIR_2
              value: "V,/media/video"
            - name: MINIDLNA_FRIENDLY_NAME
              value: {{ .Values.env.minidlnaFriendlyName }}
          ports:
          - name: http
            containerPort: {{ .Values.service.httpPort }}
          - name: dlna
            containerPort: {{ .Values.service.dlnaPort }}
            protocol: UDP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: media
              mountPath: "/media"
              readOnly: true
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-pvc"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
